DOCKER_IMG = 'docker.wdf.sap.corp:50000/com.sap.devx.wing/webide-docker-builder:1.0.0-20200420071115_4a96a6887d02ce1e7c3900fdf77c99e1d7c50b83'
pipeline {
    agent {
        docker {
            label "docker_slave"
            image DOCKER_IMG
        }
    }
    environment {
        GH_TOKEN =  credentials("github-tools-token-webidebot-serviceuser")
        TEMPLATES_BRANCH = 'master'
        PIPELINE_BRANCH = 'master'
        GITHUB_ORG = 'app-studio-landscapes'
        GITHUB_USER = 'webidebot-serviceuser'
        ACTUAL_GH_REPO = params.GITHUB_REPO
        WEBIDEBOT_GITHUB_TOKEN = credentials("github-tools-token-webidebot-serviceuser")
        GH_WDF_TOKEN = credentials('webidebot-github-token')
        GH_HOST = 'github.tools.sap'
    }
    stages {
        stage('Checkout master Branch') {
            steps {
                script{
                    checkout([$class: 'GitSCM',
			                branches: [[name: "master"]],
			                userRemoteConfigs: [[credentialsId: 'webidebot-github-tools-user', url: "https://${GH_HOST}/${GITHUB_ORG}/${ACTUAL_GH_REPO}"]]
			               ])
                env.ProductRev = getParams('params.yaml' , 'ProductRev')
                env.Cluster =  getParams('params.yaml', 'Cluster')
                env.ClusterInfrastructure = getParams('custom-values/shoot-values.yaml', 'type')
                env.Region =  getParams('custom-values/shoot-values.yaml', 'region')
                env.Secret = getParams('custom-values/shoot-values.yaml', 'secret')
                env.Host =  getParams('params.yaml', 'Host')
                env.Domain = getParams('params.yaml', 'Domain')
                env.Endpoint = getParams('params.yaml', 'Endpoint')
                env.Subdomain = getParams('params.yaml', 'Subdomain')
                env.Org = getParams('params.yaml', 'Org')
                env.Space = getParams('params.yaml', 'Space')
                env.H2O = getParams('params.yaml', 'H2O')
                env.CfUser = getParams('params.yaml', 'CfUser')
                env.CfPassword = getParams('params.yaml', 'CfPassword')
                env.Project = getParams('params.yaml', 'Project')    
                env.LandscapeMode = getParams('params.yaml', 'LandscapeEnvironment')
                env.GardenerLandscape = params.GardenerLandscape
                env.CleanRepo = false
                env.ResetPasswords = false
                env.gardenerProject = "${env.Project}"
                    
                    if(env.GardenerLandscape.toLowerCase()== "china") {
                        env.gardenerProject = "${env.GardenerLandscape.toLowerCase()}-${env.Project}";
                    }
      
                }
            }
        }
    
        stage ('update the esm repo with latest params'){
            steps {
                script{
                        checkout([$class: 'GitSCM',
			                branches: [[name: "master"]],
			                userRemoteConfigs: [[credentialsId: 'webidebot-github-token', url: "https://github.wdf.sap.corp/devx-wing/webide-jenkins.git"]]
			               ])

                           withCredentials([file(credentialsId: "gardener-${env.gardenerProject}-robot-kubeconfig", variable: 'TOKEN')]){
                            env.SERVICE_ACCOUNT_KUBECONFIG = TOKEN
                            
                            sh """
                                bash scripts/create_landscape.sh
                            """
                     }
                }  
            }
        } 
    }
}

def getParams(path, paremeter) {
    return sh (
        script: """
           yq r ${path} ${paremeter}
        """,
        returnStdout: true
        ).trim();

}
